# ===============================================================
# File:                 ~/.screenrc
# Purpose:              Setup file for "(GNU) screen"
# written by:           /dev/nall	devnall@gmail.com 
# Latest update:        Mar. 25, 2011
# Latest user version:  screen-4.00.03
# ===============================================================
#
# ===============================================================
# SEE ALSO:
# ===============================================================
# SCREEN Pages:
# http://http://www.gnu.org/software/screen/
# 
# SCREEN Manual:
# http://www.gnu.org/software/screen/manual/html_node/index.html
#
# Commands List:
# http://www.gnu.org/software/screen/manual/html_node/Command-Summary.html#Command-Summary
#
#
# ===============================================================
# ESCAPE CHARACTER:
# ===============================================================
# Define custom escape character to replace CTRL+a
  escape ``
  defescape ``
#
#
# ===============================================================
# VARIABLES
# ===============================================================
  autodetach            on              # default: on
  crlf                  off             # default: off
# deflogin              off             # default: on
# defsilence            off             # default: off
  hardcopy_append       on              # default: off
# nethack               on              # default: off
  startup_message       off             # default: on
# termcap  xterm        'AF=\E[3%dm:AB=\E[4%dm'
# termcap  xterm hs@:cs=\E[%i%d;%dr:im=\E[4h:ei=\E[4l
# terminfo xterm        'AF=\E[3%p1%dm:AB=\E[4%p1%dm'
#  terminfo xterm hs@:cs=\E[%i%p1%d;%p2%dr:im=\E[4h:ei=\E[4l
#
# This makes the scrollback mode work with mousewheel/multitouch in OSX
  termcapinfo xterm-color ti@:te@
# termcapinfo linux "ve=\E[?25h\E[?17;0;64c" # red
# termcapinfo  xterm Z0=\E[?3h:Z1=\E[?3l:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l
  vbell                 on
  vbell_msg             " *beep* "
#
  defscrollback		4096		# default: 100
# msgminwait		3		# default: 1
  silencewait		15		# default: 30
#
#
  shell -${SHELL}
#
# Default name for new windows
  shelltitle "zsh"
#
# ===============================================================
# PROGRAMS to launch at startup:
# ===============================================================
# Window numbering starts at 1 instead of 0
  bind c screen 1
  bind 0 select 10
# Uncomment one/some following lines to automatically let
# SCREEN start some programs in the given window numbers:
  screen -t local1		1 zsh
  screen -t local2		2 zsh
  screen -t remote1		3 zsh
  screen -t remote2		4 zsh
# screen -t MAIL	1 mutt
# screen -t EDIT	2 vim
# screen -t GOOGLE	3 links http://www.google.com
# screen -t NEWS	4 slrn
# screen -t IRC		10 irssi
#
#
# ===========================================
# CAPTION - shows a "caption" for the window.
# ===========================================
# a "caption" is another line which can show information -
# in addition to the hardstatus line.
#
# use caption to show window list:
# caption always "%{= kw}%?%-Lw%?%{+b kw}%n*%t%f %?(%u)%?%{= kw}%?%+Lw%?"
#
# caption always '%{= wb}%50=%n%f %t%{= wb}'
# this basically just shows the current window number and title
# on its own; the "%50=" displays it in the middle of the line.
#
# caption always "%>%{wk}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?%<"
# caption always "%-Lw%{= BW}%50>%n%f* %t%{-}%+Lw%<"
# caption always "%?%F%{.RW}%?%3n %t%? [%h]%?"
# caption always "%{rk}%H %{gk}%c %{yk}%M%d %{wk}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?"
#
# caption always "%{kG}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{kG}%?%+Lw%?"
#
# "push right border: current time with seconds and current date"
# caption always "%=%c:%s %Y-%m-%d"
#
# Prints the window names and highlight the current window in yellow.
# On the right there is the time in green and the date in yellow.
#
# caption always "%?%{+b kw}%-Lw%?%{yK}%n*%f %t%?(%u)%?%?%{wk}%+Lw%? %{gk}%=%c %{yk}%d/%M/%Y"
#
#
# ===============================================================
# Hardstatus Line and sorendition
# ===============================================================
#
# Current hardstatus:
# [ Hostname ] [ Screens] [Date Time]
hardstatus alwayslastline '%{= kG}[ %{g}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{c}%m%{W}/%{c}%d%{W}/%{c}%y %{W}%c %{g}]'
#
# Some other hardstatus strings to play with:
#hardstatus alwayslastline "%{+b kr}[ %H ] %{kw} Load: %l %-=%  %{kb} %c:%s  %d.%m.%Y "
#hardstatus alwayslastline "%{+b kr}[ %H ] %{ky} Load: %l %-=%{kb} %c  %d.%m.%Y"
#hardstatus alwayslastline "%?%{wk}%-Lw%?%{yK}%n*%f %t%?(%u)%?%?%{wk}%+Lw%? %{gk}%=%c %{yk}%d/%M/%Y"
#hardstatus alwayslastline '%{= kG}[ %{G}%l %{G}%H %{g}][%= %{=kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{c}%m%{W}/%{c}%d%{W}/%{c}%y %{W}%c %{g}]'
#hardstatus alwayslastline '%{= kG}[ %{G}%l %{G}%H %{g}][%= %{=kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{c}%m%{W}/%{c}%d%{W}/%{c}%y %{W}%c %{g}]'
#
#
# Colorize the "messages" and "text marking":
# Example:  Blue bg, white fg
# sorendition gK
#
#
# ===============================================================
# Messages
# ===============================================================
# There are two kinds of messages:  "activity" and "bell"
# They are also the names of the commands that set the
# respective messages.  In every message there can be "meta
# strings" which are replaced by values.  A meta string starts
# with a percent sign and is then followed by one of the
# following letters: aAdDmMnstwWyY The meta strings refer to
# the current date and time or to a window title or number:
#   %t - title
#   %n - number (a single % still works)
#   %d - day
#   %D - weekday name
#   %m - month
#   %M - month name
#   %y - year (2 digit)
#   %Y - year (4 digit)
#   %w - hour:minutes (24h format)
#   %W - hour:minutes (12h format)
#   %s - seconds
#   %a - am/pm
#   %A - AM/PM
# ===============================================================
# "~" stands for the "bell" character
#
# activity:     This message *includes* a "beep" with '~'.
  activity              "activity in %n (%t) [%w:%s]~"
#
# bell:         This message *includes* a "beep" with '~'.
  bell                  "bell in %n (%t) [%w:%s]~"
#
# pow_detach_msg:  Message shown when session gets power detached.
  pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."
#
  silencewait 15	#default 30
#
#
# ==============================================================
# Create startup environment
# ==============================================================
#
#
# ==============================================================
#  BIND bind - defaults
# ==============================================================
# The "bind" command assign keys to (internal) commands
# SCREEN checks all the keys you type; you type the key
# which is known as the "command character" then SCREEN
# eats this key, too, and checks whether this key is
# "bound" to a command.  If so then SCREEN will execute it.
#
# The command "bind" allows you to chose which keys
# will be assigned to the commands.
#
# Some commands are bound to several keys -
# usually to both some letter and its corresponding
# control key combination, eg the command
# "(create) screen" is bound to both 'c' and '^C'.
#
# The following list shows the default bindings:
#
# break       ^B b
# clear       C
# colon       :
# copy        ^[ [
# detach      ^D d
# digraph     ^V
# displays    *
# dumptermcap .
# fit         F
# flow        ^F f
# focus       ^I
# hardcopy    h
# help        ?
# history     { }
# info        i
# kill        K k
# lastmsg     ^M m
# license     ,
# log         H
# login       L
# meta        x
# monitor     M
# next        ^@ ^N sp n
# number      N
# only        Q
# other       ^X
# pow_break   B
# pow_detach  D
# prev        ^H ^P p ^?
# quit        \
# readbuf     <
# redisplay   ^L l
# remove      X
# removebuf   =
# reset       Z
# screen      ^C c
# select      " '
# silence     _
# split       S
# suspend     ^Z z
# time        ^T t
# title       A
# vbell       ^G
# version     v
# width       W
# windows     ^W w
# wrap        ^R r
# writebuf    >
# xoff        ^S s
# xon         ^Q q
# ^]  paste .
# -   select -
# 0   select 0
# 1   select 1
# 2   select 2
# 3   select 3
# 4   select 4
# 5   select 5
# 6   select 6
# 7   select 7
# 8   select 8
# 9   select 9
# I   login on
# O   login off
# ]   paste .
#
# Default unbound keys:  -B--E-G--J-L---P-R-TUV--Y-
# Default bound keys:  A-CD-F-HI-K-MNO-Q-S---WX-Z
#
# And here are the default bind commands if you need them:
#
# bind A title
# bind C clear
# bind D pow_detach
# bind F fit
# bind H log
# bind I login on
# bind K kill
# bind L login
# bind M monitor
# bind N number
# bind O login off
# bind Q only
# bind S split
# bind W width
# bind X remove
# bind Z reset
#
# I suggest that you don't change the bidnings for
# 'H' ("log") and 'M' ("monitor") as they are really
# useful and you might want to use them a lot;
# in this case it is recommended to use
# the defaults to avoid confusion.
#
# If you are using "split windows" already
# then you will also use the command
# associated with the keys FQSX a lot, too -
# so don't change their bindings!
#
# Anyway, I have bound the unbound uppercase letters
# to start programs in windows directly, ie without
# starting a new window with a shell within first.
# This simply saves shells and thus saves RAM -
# and also avoids that the title of a windows is
# the name of your shell.  Also, you need not "exit"
# from a shell when you are done with some program:
# =================================================================
#
#
# ==============================================================
# BIND and the Services:
# ==============================================================
# I am using the uppercase letters to start programs/services:
#
  bind A title  # default!
#
# GOOGLE - Web Search Engine
#  bind ^g  screen -t 'Google' links www.google.com
#
# IRC - International Relay Chat
# bind I screen -t 'irc'  5 irc
# bind I screen -t 'icq'  9 micq
#
# IMDB - search the Internet Movie DataBase:
#  bind I screen -t 'IMDB' 9 links http://us.imdb.com/search/
#
# KILL UNBIND:
# This *removes* the binding for 'K'
# thus requireing you to enter the
# command via the command line, ie ":kill".
# This prevent accidental killing of your windows.
  bind K
#
# LYNX - web browser
# bind L screen -t 'WWW' 4 lynx  http://www.google.com
#
 bind M monitor # default!
#
# NN - newsreader
# bind N screen -t 'nn'   3 nn
#
# Check the weather.
# bind N screen -t 'Nepal'  links http://www.wunderground.com/global/stations/44454.html
#
# Paste - use 'P' instead of ']':
#  bind P paste .
#
# SLRN - newsreader
#  bind S screen -t 'slrn' 3 slrn -n -C -k0
# see also:  http://www.slrn.org  http://slrn.sourceforge.net
#
# VIM - editor
  bind V screen -t 'vim' 0 vim
# Editing comes with email quite naturally -
# so I have reserved window #1 for this.
#
#  X - a fast way to lock the current screen.
#  bind X lockscreen
#
#
# ===============================================================
# BIND Examples:
# ===============================================================
# You can also paste the values of
# SCREEN's environment variables:
# bind E stuff $EMAIL
# bind U stuff $URL
#
#
# ===============================================================
# Key bindings
# ===============================================================
# Remove some default key bindings by binding
# them to "nothing" (empty right-hand-side):
#
# bind .  dumptermcap # default
  bind .
# bind ^\ quit        # default
  bind ^\
# bind \\ quit        # default
  bind \\
# bind h  hardcopy    # default
# bind h
# bind ^h ???         # default
# bind ^h
# bind }  history     # default
# bind }
#
# Move stuff copied in screen to OSX clipboard
  bind b eval "writebuf" "exec sh -c 'pbcopy < /tmp/screen-exchange'"
#
# =================================================================
#
#
# ==================================================================
# REFERENCE useful info
# ==================================================================
# COLOR:  colors codes are combinations of
# [attribute modifier] [color description]
# the manual talks of "attribute/color modifiers".
# see the manual, section "STRING ESCAPES".
#
# Color table:
# 0 Black             .    leave color unchanged
# 1 Red               b    blue
# 2 Green             c    cyan
# 3 Brown / yellow    d    default color
# 4 Blue              g    green           b    bold
# 5 Purple            k    blacK           B    blinking
# 6 Cyan              m    magenta         d    dim
# 7 White             r    red             r    reverse
# 8 unused/illegal    w    white           s    standout
# 9 transparent       y    yellow          u    underline
# ==================================================================
